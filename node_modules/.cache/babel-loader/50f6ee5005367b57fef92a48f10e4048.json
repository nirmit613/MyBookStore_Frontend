{"ast":null,"code":"var _jsxFileName = \"E:\\\\7th Semester\\\\Internship2\\\\TatvaSoft\\\\MyBookStore_Tatvasoft\\\\src\\\\pages\\\\book\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { productStyle } from \"./style\";\nimport { defaultFilter, RecordsPerPage } from \"../../constant/constant\";\nimport { useHistory } from \"react-router-dom\";\nimport { Typography, TextField } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Button } from \"@material-ui/core\";\nimport bookService from \"../../service/book.service\";\nimport { toast } from \"react-toastify\";\nimport categoryService from \"../../service/category.service\";\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\nimport Shared from \"../../utils/shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Book = () => {\n  _s();\n\n  const classes = productStyle();\n  const [filters, setFilters] = useState(defaultFilter);\n  const [bookRecords, setBookRecords] = useState({\n    records: [],\n    totalRecords: 0\n  });\n  const [open, setOpen] = useState(false);\n  const [selectedId, setSelectedId] = useState(0);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    getAllCategories();\n  }, []);\n\n  const getAllCategories = async () => {\n    await categoryService.getAll({\n      pageIndex: 0\n    }).then(res => {\n      if (res) {\n        setCategories(res.records);\n      }\n    });\n  };\n\n  const books = useMemo(() => {\n    if (bookRecords !== null && bookRecords !== void 0 && bookRecords.records) {\n      return bookRecords.records;\n    }\n\n    return []; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categories, bookRecords]);\n  const history = useHistory();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (filters.keyword === \"\") delete filters.keyword;\n      searchAllBooks({ ...filters\n      });\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [filters]);\n\n  const searchAllBooks = filters => {\n    bookService.getAll(filters).then(res => {\n      setBookRecords(res);\n    });\n  };\n\n  const columns = [{\n    id: \"name\",\n    label: \"Book Name\",\n    minWidth: 100\n  }, {\n    id: \"price\",\n    label: \"Price\",\n    minWidth: 100\n  }, {\n    id: \"category\",\n    label: \"Category\",\n    minWidth: 100\n  }];\n\n  const onConfirmDelete = () => {\n    bookService.delete(selectedId).then(res => {\n      toast.success(Shared.messages.DELETE_SUCCESS);\n      setOpen(false);\n      setFilters({ ...filters,\n        pageIndex: 1\n      });\n    }).catch(e => toast.error(Shared.messages.DELETE_FAIL));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.productWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: \"Book Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"text\",\n          name: \"text\",\n          placeholder: \"Search...\",\n          variant: \"outlined\",\n          inputProps: {\n            className: \"small\"\n          },\n          onChange: e => {\n            setFilters({ ...filters,\n              keyword: e.target.value,\n              pageIndex: 1\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          className: \"btn pink-btn\",\n          variant: \"contained\",\n          color: \"primary\",\n          disableElevation: true,\n          onClick: () => history.push(\"/add-book\"),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [books === null || books === void 0 ? void 0 : books.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"green-btn btn\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  disableElevation: true,\n                  onClick: () => {\n                    history.push(`/edit-book/${row.id}`);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"btn pink-btn\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  disableElevation: true,\n                  onClick: () => {\n                    var _row$id;\n\n                    setOpen(true);\n                    setSelectedId((_row$id = row.id) !== null && _row$id !== void 0 ? _row$id : 0);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)), !(bookRecords !== null && bookRecords !== void 0 && bookRecords.records.length) && /*#__PURE__*/_jsxDEV(TableRow, {\n              className: \"TableRow\",\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 5,\n                className: \"TableCell\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  className: \"noDataText\",\n                  children: \"No Books\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: RecordsPerPage,\n        component: \"div\",\n        count: bookRecords !== null && bookRecords !== void 0 && bookRecords.records.length ? bookRecords.totalRecords : 0,\n        rowsPerPage: filters.pageSize || 0,\n        page: filters.pageIndex - 1,\n        onPageChange: (e, newPage) => {\n          setFilters({ ...filters,\n            pageIndex: newPage + 1\n          });\n        },\n        onRowsPerPageChange: e => {\n          setFilters({ ...filters,\n            pageIndex: 1,\n            pageSize: Number(e.target.value)\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n        open: open,\n        onClose: () => setOpen(false),\n        onConfirm: () => onConfirmDelete(),\n        title: \"Delete book\",\n        description: \"Are you sure you want to delete this book?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Book, \"ntEeQrweRDAsm5BUxix9teEkP1s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Book;\nexport default Book;\n\nvar _c;\n\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"sources":["E:/7th Semester/Internship2/TatvaSoft/MyBookStore_Tatvasoft/src/pages/book/index.tsx"],"names":["React","useEffect","useMemo","useState","productStyle","defaultFilter","RecordsPerPage","useHistory","Typography","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","bookService","toast","categoryService","ConfirmationDialog","Shared","Book","classes","filters","setFilters","bookRecords","setBookRecords","records","totalRecords","open","setOpen","selectedId","setSelectedId","categories","setCategories","getAllCategories","getAll","pageIndex","then","res","books","history","timer","setTimeout","keyword","searchAllBooks","clearTimeout","columns","id","label","minWidth","onConfirmDelete","delete","success","messages","DELETE_SUCCESS","catch","e","error","DELETE_FAIL","productWrapper","className","target","value","push","map","column","row","index","name","price","category","length","pageSize","newPage","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,yBAA9C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,UADF,EAEEC,SAFF,QAGO,mBAHP;AAIA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAKA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAGpB,YAAY,EAA5B;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAcE,aAAd,CAAtC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAwB;AACpE0B,IAAAA,OAAO,EAAE,EAD2D;AAEpEC,IAAAA,YAAY,EAAE;AAFsD,GAAxB,CAA9C;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAS,CAAT,CAA5C;AAEA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAkB,EAAlB,CAA5C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,gBAAgB,GAAG,YAA2B;AAClD,UAAMjB,eAAe,CAACkB,MAAhB,CAAuB;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAvB,EAAyCC,IAAzC,CAA+CC,GAAD,IAAS;AAC3D,UAAIA,GAAJ,EAAS;AACPL,QAAAA,aAAa,CAACK,GAAG,CAACZ,OAAL,CAAb;AACD;AACF,KAJK,CAAN;AAKD,GAND;;AAQA,QAAMa,KAAkB,GAAGxC,OAAO,CAAC,MAAmB;AACpD,QAAIyB,WAAJ,aAAIA,WAAJ,eAAIA,WAAW,CAAEE,OAAjB,EAA0B;AACxB,aAAOF,WAAW,CAACE,OAAnB;AACD;;AACD,WAAO,EAAP,CAJoD,CAKtD;AACC,GANiC,EAM/B,CAACM,UAAD,EAAaR,WAAb,CAN+B,CAAlC;AAQA,QAAMgB,OAAO,GAAGpC,UAAU,EAA1B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2C,KAAqB,GAAGC,UAAU,CAAC,MAAM;AAC7C,UAAGpB,OAAO,CAACqB,OAAR,KAAkB,EAArB,EAAyB,OAAOrB,OAAO,CAACqB,OAAf;AACzBC,MAAAA,cAAc,CAAC,EAAE,GAAGtB;AAAL,OAAD,CAAd;AACD,KAHuC,EAGrC,GAHqC,CAAxC;AAIA,WAAO,MAAMuB,YAAY,CAACJ,KAAD,CAAzB;AACD,GANQ,EAMN,CAACnB,OAAD,CANM,CAAT;;AAQA,QAAMsB,cAAc,GAAItB,OAAD,IAAgC;AACrDP,IAAAA,WAAW,CAACoB,MAAZ,CAAmBb,OAAnB,EAA4Be,IAA5B,CAAkCC,GAAD,IAAS;AACxCb,MAAAA,cAAc,CAACa,GAAD,CAAd;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMQ,OAAO,GAAG,CACd;AAAEC,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,KAAK,EAAE,WAArB;AAAkCC,IAAAA,QAAQ,EAAE;AAA5C,GADc,EAEd;AAAEF,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,KAAK,EAAE,OAAtB;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAFc,EAGd;AAAEF,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,KAAK,EAAE,UAAzB;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GAHc,CAAhB;;AAMA,QAAMC,eAAe,GAAG,MAAY;AAClCnC,IAAAA,WAAW,CAACoC,MAAZ,CAAmBrB,UAAnB,EAA+BO,IAA/B,CAAqCC,GAAD,IAAS;AAC3CtB,MAAAA,KAAK,CAACoC,OAAN,CAAcjC,MAAM,CAACkC,QAAP,CAAgBC,cAA9B;AACAzB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAN,MAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcc,QAAAA,SAAS,EAAE;AAAzB,OAAD,CAAV;AACD,KAJD,EAIGmB,KAJH,CAISC,CAAC,IAAExC,KAAK,CAACyC,KAAN,CAAYtC,MAAM,CAACkC,QAAP,CAAgBK,WAA5B,CAJZ;AAKD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAErC,OAAO,CAACsC,cAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,MADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,OAAO,EAAC,UAJV;AAKE,UAAA,UAAU,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WALd;AAME,UAAA,QAAQ,EAAGJ,CAAD,IAAO;AACfjC,YAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcqB,cAAAA,OAAO,EAAEa,CAAC,CAACK,MAAF,CAASC,KAAhC;AAAuC1B,cAAAA,SAAS,EAAE;AAAlD,aAAD,CAAV;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,gBAAgB,MALlB;AAME,UAAA,OAAO,EAAE,MAAMI,OAAO,CAACuB,IAAR,CAAa,WAAb,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAwBE,QAAC,cAAD;AAAA,+BACE,QAAC,KAAD;AAAO,wBAAW,cAAlB;AAAA,kCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,yBACGjB,OAAO,CAACkB,GAAR,CAAaC,MAAD,iBACX,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,QAAQ,EAAEgB,MAAM,CAAChB;AAAnB,iBAFT;AAAA,0BAIGgB,MAAM,CAACjB;AAJV,iBACOiB,MAAM,CAAClB,EADd;AAAA;AAAA;AAAA;AAAA,sBADD,CADH,eASE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,SAAD;AAAA,uBACGR,KADH,aACGA,KADH,uBACGA,KAAK,CAAEyB,GAAP,CAAW,CAACE,GAAD,EAAiBC,KAAjB,kBACV,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA,0BAAYD,GAAG,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA,0BAAYF,GAAG,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAA,0BAAYH,GAAG,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,SAAD;AAAA,wCACE,QAAC,MAAD;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,eAFZ;AAGE,kBAAA,OAAO,EAAC,WAHV;AAIE,kBAAA,KAAK,EAAC,SAJR;AAKE,kBAAA,gBAAgB,MALlB;AAME,kBAAA,OAAO,EAAE,MAAM;AACb9B,oBAAAA,OAAO,CAACuB,IAAR,CAAc,cAAaG,GAAG,CAACnB,EAAG,EAAlC;AACD,mBARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAaE,QAAC,MAAD;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,cAFZ;AAGE,kBAAA,OAAO,EAAC,WAHV;AAIE,kBAAA,KAAK,EAAC,SAJR;AAKE,kBAAA,gBAAgB,MALlB;AAME,kBAAA,OAAO,EAAE,MAAM;AAAA;;AACblB,oBAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,oBAAAA,aAAa,YAACmC,GAAG,CAACnB,EAAL,6CAAW,CAAX,CAAb;AACD,mBATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA,eAAemB,GAAG,CAACnB,EAAnB;AAAA;AAAA;AAAA;AAAA,oBADD,CADH,EAmCG,EAACvB,WAAD,aAACA,WAAD,eAACA,WAAW,CAAEE,OAAb,CAAqB6C,MAAtB,kBACC,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,UAApB;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAE,CAApB;AAAuB,gBAAA,SAAS,EAAC,WAAjC;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAC,QAAlB;AAA2B,kBAAA,SAAS,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF,eAsFE,QAAC,eAAD;AACE,QAAA,kBAAkB,EAAEpE,cADtB;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,KAAK,EAAEqB,WAAW,SAAX,IAAAA,WAAW,WAAX,IAAAA,WAAW,CAAEE,OAAb,CAAqB6C,MAArB,GAA8B/C,WAAW,CAACG,YAA1C,GAAyD,CAHlE;AAIE,QAAA,WAAW,EAAEL,OAAO,CAACkD,QAAR,IAAoB,CAJnC;AAKE,QAAA,IAAI,EAAElD,OAAO,CAACc,SAAR,GAAoB,CAL5B;AAME,QAAA,YAAY,EAAE,CAACoB,CAAD,EAAIiB,OAAJ,KAAgB;AAC5BlD,UAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcc,YAAAA,SAAS,EAAEqC,OAAO,GAAG;AAAnC,WAAD,CAAV;AACD,SARH;AASE,QAAA,mBAAmB,EAAGjB,CAAD,IAAO;AAC1BjC,UAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETc,YAAAA,SAAS,EAAE,CAFF;AAGToC,YAAAA,QAAQ,EAAEE,MAAM,CAAClB,CAAC,CAACK,MAAF,CAASC,KAAV;AAHP,WAAD,CAAV;AAKD;AAfH;AAAA;AAAA;AAAA;AAAA,cAtFF,eAuGE,QAAC,kBAAD;AACE,QAAA,IAAI,EAAElC,IADR;AAEE,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAFxB;AAGE,QAAA,SAAS,EAAE,MAAMqB,eAAe,EAHlC;AAIE,QAAA,KAAK,EAAC,aAJR;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cAvGF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmHD,CA/KD;;GAAM9B,I;UAgCYhB,U;;;KAhCZgB,I;AAiLN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { productStyle } from \"./style\";\r\nimport { defaultFilter, RecordsPerPage } from \"../../constant/constant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport bookService from \"../../service/book.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport categoryService from \"../../service/category.service\";\r\nimport FilterModel from \"../../models/FilterModel\";\r\nimport BaseList from \"../../models/BaseList\";\r\nimport { BookModel } from \"../../models/BookModel\";\r\nimport { CategoryModel } from \"../../models/CategoryModel\";\r\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\r\nimport Shared from \"../../utils/shared\";\r\n\r\nconst Book: React.FC = () => {\r\n  const classes = productStyle();\r\n  const [filters, setFilters] = useState<FilterModel>(defaultFilter);\r\n  const [bookRecords, setBookRecords] = useState<BaseList<BookModel[]>>({\r\n    records: [],\r\n    totalRecords: 0,\r\n  });\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [selectedId, setSelectedId] = useState<number>(0);\r\n\r\n  const [categories, setCategories] = useState<CategoryModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    getAllCategories();\r\n  }, []);\r\n\r\n  const getAllCategories = async (): Promise<void> => {\r\n    await categoryService.getAll({ pageIndex: 0 }).then((res) => {\r\n      if (res) {\r\n        setCategories(res.records);\r\n      }\r\n    });\r\n  };\r\n\r\n  const books: BookModel[] = useMemo((): BookModel[] => {\r\n    if (bookRecords?.records) {\r\n      return bookRecords.records;\r\n    }\r\n    return [];\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categories, bookRecords]);\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const timer: NodeJS.Timeout = setTimeout(() => {\r\n      if(filters.keyword===\"\") delete filters.keyword\r\n      searchAllBooks({ ...filters });\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [filters]);\r\n\r\n  const searchAllBooks = (filters: FilterModel): void => {\r\n    bookService.getAll(filters).then((res) => {\r\n      setBookRecords(res);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"Book Name\", minWidth: 100 },\r\n    { id: \"price\", label: \"Price\", minWidth: 100 },\r\n    { id: \"category\", label: \"Category\", minWidth: 100 },\r\n  ];\r\n\r\n  const onConfirmDelete = (): void => {\r\n    bookService.delete(selectedId).then((res) => {\r\n      toast.success(Shared.messages.DELETE_SUCCESS);\r\n      setOpen(false);\r\n      setFilters({ ...filters, pageIndex: 1 });\r\n    }).catch(e=>toast.error(Shared.messages.DELETE_FAIL));\r\n  };\r\n  return (\r\n    <div className={classes.productWrapper}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h1\">Book Page</Typography>\r\n        <div className=\"btn-wrapper\">\r\n          <TextField\r\n            id=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Search...\"\r\n            variant=\"outlined\"\r\n            inputProps={{ className: \"small\" }}\r\n            onChange={(e) => {\r\n              setFilters({ ...filters, keyword: e.target.value, pageIndex: 1 });\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            className=\"btn pink-btn\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => history.push(\"/add-book\")}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n        <TableContainer>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {books?.map((row: BookModel, index) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.price}</TableCell>\r\n                  <TableCell>{row.category}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"green-btn btn\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        history.push(`/edit-book/${row.id}`);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn pink-btn\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disableElevation\r\n                      onClick={() => {\r\n                        setOpen(true);\r\n                        setSelectedId(row.id ?? 0);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {!bookRecords?.records.length && (\r\n                <TableRow className=\"TableRow\">\r\n                  <TableCell colSpan={5} className=\"TableCell\">\r\n                    <Typography align=\"center\" className=\"noDataText\">\r\n                      No Books\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={RecordsPerPage}\r\n          component=\"div\"\r\n          count={bookRecords?.records.length ? bookRecords.totalRecords : 0}\r\n          rowsPerPage={filters.pageSize || 0}\r\n          page={filters.pageIndex - 1}\r\n          onPageChange={(e, newPage) => {\r\n            setFilters({ ...filters, pageIndex: newPage + 1 });\r\n          }}\r\n          onRowsPerPageChange={(e) => {\r\n            setFilters({\r\n              ...filters,\r\n              pageIndex: 1,\r\n              pageSize: Number(e.target.value),\r\n            });\r\n          }}\r\n        />\r\n        <ConfirmationDialog\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onConfirm={() => onConfirmDelete()}\r\n          title=\"Delete book\"\r\n          description=\"Are you sure you want to delete this book?\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n"]},"metadata":{},"sourceType":"module"}