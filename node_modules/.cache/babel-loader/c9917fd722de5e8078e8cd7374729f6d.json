{"ast":null,"code":"var _jsxFileName = \"E:\\\\7th Semester\\\\Internship2\\\\TatvaSoft\\\\MyBookStore_Tatvasoft\\\\src\\\\pages\\\\register\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { createAccountStyle } from \"./style\";\nimport { Breadcrumbs, Link, Typography, Button, TextField, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport ValidationErrorMessage from \"../../components/ValidationErrorMessage/index\";\nimport authService from \"../../service/auth.service\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { CreateUserModel } from \"../../models/AuthModel\";\nimport { Role } from \"../../utils/enum\";\nimport { materialCommonStyles } from \"../../utils/materialCommonStyles\";\nimport userService from \"../../service/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const classes = createAccountStyle();\n  const materialClasses = materialCommonStyles();\n  const history = useHistory();\n  const initialValues = new CreateUserModel();\n  const [roleList, setRoleList] = useState([]);\n  useEffect(() => {\n    getRoles();\n  }, []);\n\n  const getRoles = () => {\n    userService.getAllRoles().then(res => {\n      if (res.records.length) {\n        setRoleList(res.records.filter(role => role.id !== Role.Admin));\n      }\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n    password: Yup.string().min(5, \"Password must be 5 characters at minimum\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Password and Confirm Password must be match.\").required(\"Confirm Password is required.\"),\n    firstName: Yup.string().required(\"First name is required\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n    roleId: Yup.number().required(\"Role is required\")\n  });\n\n  const onSubmit = data => {\n    authService.create(data).then(res => {\n      history.push(\"/login\");\n      toast.success(\"Successfully registered\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createAccountWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-account-page-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          separator: \"\\u203A\",\n          \"aria-label\": \"breadcrumb\",\n          className: \"breadcrumb-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            color: \"inherit\",\n            href: \"/\",\n            title: \"Home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: \"Create an Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: \"Login or Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-account-row\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            validationSchema: validationSchema,\n            onSubmit: onSubmit,\n            children: _ref => {\n              let {\n                values,\n                errors,\n                touched,\n                handleBlur,\n                handleChange,\n                handleSubmit\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-block\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"personal-information\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h2\",\n                      children: \"Personal Information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Please enter the following information to create your account.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-row-wrapper\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-col\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          id: \"first-name\",\n                          name: \"firstName\",\n                          label: \"First Name *\",\n                          variant: \"outlined\",\n                          inputProps: {\n                            className: \"small\"\n                          },\n                          onBlur: handleBlur,\n                          onChange: handleChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ValidationErrorMessage, {\n                          message: errors.firstName,\n                          touched: touched.firstName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-col\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          onBlur: handleBlur,\n                          onChange: handleChange,\n                          id: \"last-name\",\n                          name: \"lastName\",\n                          label: \"Last Name *\",\n                          variant: \"outlined\",\n                          inputProps: {\n                            className: \"small\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ValidationErrorMessage, {\n                          message: errors.lastName,\n                          touched: touched.lastName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-col\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          onBlur: handleBlur,\n                          onChange: handleChange,\n                          id: \"email\",\n                          name: \"email\",\n                          label: \"Email Address *\",\n                          variant: \"outlined\",\n                          inputProps: {\n                            className: \"small\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ValidationErrorMessage, {\n                          message: errors.email,\n                          touched: touched.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-col\",\n                        children: /*#__PURE__*/_jsxDEV(FormControl, {\n                          className: \"dropdown-wrapper\",\n                          variant: \"outlined\",\n                          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                            htmlFor: \"select\",\n                            children: \"Roles\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 166,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Select, {\n                            name: \"roleId\",\n                            id: \"roleId\",\n                            inputProps: {\n                              className: \"small\"\n                            },\n                            onChange: handleChange,\n                            className: materialClasses.customSelect,\n                            MenuProps: {\n                              classes: {\n                                paper: materialClasses.customSelect\n                              }\n                            },\n                            value: values.roleId,\n                            children: roleList.length > 0 && roleList.map(role => /*#__PURE__*/_jsxDEV(MenuItem, {\n                              value: role.id,\n                              children: role.name\n                            }, \"name\" + role.id, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 182,\n                              columnNumber: 35\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 167,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"login-information\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h2\",\n                      children: \"Login Information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-row-wrapper\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-col\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          onBlur: handleBlur,\n                          onChange: handleChange,\n                          id: \"password\",\n                          type: \"password\",\n                          name: \"password\",\n                          label: \"Password *\",\n                          variant: \"outlined\",\n                          inputProps: {\n                            className: \"small\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ValidationErrorMessage, {\n                          message: errors.password,\n                          touched: touched.password\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-col\",\n                        children: [/*#__PURE__*/_jsxDEV(TextField, {\n                          type: \"password\",\n                          onBlur: handleBlur,\n                          onChange: handleChange,\n                          id: \"confirm-password\",\n                          name: \"confirmPassword\",\n                          label: \"Confirm Password *\",\n                          variant: \"outlined\",\n                          inputProps: {\n                            className: \"small\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ValidationErrorMessage, {\n                          message: errors.confirmPassword,\n                          touched: touched.confirmPassword\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"btn-wrapper\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"pink-btn btn\",\n                        variant: \"contained\",\n                        type: \"submit\",\n                        color: \"primary\",\n                        disableElevation: true,\n                        children: \"Register\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"NwCu+h9nKcDZ8I46lOAFiyf4f4k=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/7th Semester/Internship2/TatvaSoft/MyBookStore_Tatvasoft/src/pages/register/index.tsx"],"names":["React","useEffect","useState","createAccountStyle","Breadcrumbs","Link","Typography","Button","TextField","FormControl","InputLabel","MenuItem","Select","Yup","Formik","ValidationErrorMessage","authService","useHistory","toast","CreateUserModel","Role","materialCommonStyles","userService","Register","classes","materialClasses","history","initialValues","roleList","setRoleList","getRoles","getAllRoles","then","res","records","length","filter","role","id","Admin","validationSchema","object","shape","email","string","required","password","min","confirmPassword","oneOf","ref","firstName","lastName","roleId","number","onSubmit","data","create","push","success","createAccountWrapper","values","errors","touched","handleBlur","handleChange","handleSubmit","className","customSelect","paper","map","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { createAccountStyle } from \"./style\";\r\nimport {\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport ValidationErrorMessage from \"../../components/ValidationErrorMessage/index\";\r\nimport authService from \"../../service/auth.service\";\r\nimport { StatusCode } from \"./../../constant/constant\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CreateUserModel } from \"../../models/AuthModel\";\r\nimport { Role } from \"../../utils/enum\";\r\nimport RoleModel from \"../../models/RoleModel\";\r\nimport { materialCommonStyles } from \"../../utils/materialCommonStyles\";\r\nimport BaseList from \"../../models/BaseList\";\r\nimport userService from \"../../service/user.service\";\r\n\r\nconst Register: React.FC = () => {\r\n  const classes = createAccountStyle();\r\n  const materialClasses = materialCommonStyles();\r\n  const history = useHistory();\r\n  const initialValues: CreateUserModel = new CreateUserModel();\r\n  const [roleList, setRoleList] = useState<RoleModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    getRoles();\r\n  }, []);\r\n\r\n  const getRoles = (): void => {\r\n    userService.getAllRoles().then((res: BaseList<RoleModel[]>) => {\r\n      if (res.records.length) {\r\n        setRoleList(\r\n          res.records.filter((role: RoleModel) => role.id !== Role.Admin)\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Invalid email address format\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(5, \"Password must be 5 characters at minimum\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        \"Password and Confirm Password must be match.\"\r\n      )\r\n      .required(\"Confirm Password is required.\"),\r\n    firstName: Yup.string().required(\"First name is required\"),\r\n    lastName: Yup.string().required(\"Last name is required\"),\r\n    roleId: Yup.number().required(\"Role is required\"),\r\n  });\r\n\r\n  const onSubmit = (data: CreateUserModel): void => {\r\n    authService.create(data).then((res) => {\r\n      history.push(\"/login\");\r\n      toast.success(\"Successfully registered\");\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.createAccountWrapper}>\r\n      <div className=\"create-account-page-wrapper\">\r\n        <div className=\"container\">\r\n          <Breadcrumbs\r\n            separator=\"›\"\r\n            aria-label=\"breadcrumb\"\r\n            className=\"breadcrumb-wrapper\"\r\n          >\r\n            <Link color=\"inherit\" href=\"/\" title=\"Home\">\r\n              Home\r\n            </Link>\r\n            <Typography color=\"textPrimary\">Create an Account</Typography>\r\n          </Breadcrumbs>\r\n\r\n          <Typography variant=\"h1\">Login or Create an Account</Typography>\r\n          <div className=\"create-account-row\">\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={validationSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-block\">\r\n                    <div className=\"personal-information\">\r\n                      <Typography variant=\"h2\">Personal Information</Typography>\r\n                      <p>\r\n                        Please enter the following information to create your\r\n                        account.\r\n                      </p>\r\n                      <div className=\"form-row-wrapper\">\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            id=\"first-name\"\r\n                            name=\"firstName\"\r\n                            label=\"First Name *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.firstName}\r\n                            touched={touched.firstName}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"last-name\"\r\n                            name=\"lastName\"\r\n                            label=\"Last Name *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.lastName}\r\n                            touched={touched.lastName}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email Address *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.email}\r\n                            touched={touched.email}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <FormControl\r\n                            className=\"dropdown-wrapper\"\r\n                            variant=\"outlined\"\r\n                          >\r\n                            <InputLabel htmlFor=\"select\">Roles</InputLabel>\r\n                            <Select\r\n                              name=\"roleId\"\r\n                              id={\"roleId\"}\r\n                              inputProps={{ className: \"small\" }}\r\n                              onChange={handleChange}\r\n                              className={materialClasses.customSelect}\r\n                              MenuProps={{\r\n                                classes: {\r\n                                  paper: materialClasses.customSelect,\r\n                                },\r\n                              }}\r\n                              value={values.roleId}\r\n                            >\r\n                              {roleList.length > 0 &&\r\n                                roleList.map((role: RoleModel) => (\r\n                                  <MenuItem\r\n                                    value={role.id}\r\n                                    key={\"name\" + role.id}\r\n                                  >\r\n                                    {role.name}\r\n                                  </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"login-information\">\r\n                      <Typography variant=\"h2\">Login Information</Typography>\r\n\r\n                      <div className=\"form-row-wrapper\">\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Password *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.password}\r\n                            touched={touched.password}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-col\">\r\n                          <TextField\r\n                            type=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            id=\"confirm-password\"\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm Password *\"\r\n                            variant=\"outlined\"\r\n                            inputProps={{ className: \"small\" }}\r\n                          />\r\n                          <ValidationErrorMessage\r\n                            message={errors.confirmPassword}\r\n                            touched={touched.confirmPassword}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"btn-wrapper\">\r\n                        <Button\r\n                          className=\"pink-btn btn\"\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                          color=\"primary\"\r\n                          disableElevation\r\n                        >\r\n                          Register\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}